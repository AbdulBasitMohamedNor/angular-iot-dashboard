import{Fa as k,Ia as R,J as w,K as C,M as E,N as D,P as z,S,U as h,a as f,ba as g,c,f as y,fa as u,h as l,ha as O,i as L,ka as M,kb as T,nb as p,pb as m,qb as a}from"./chunk-H2ARN4F4.js";import{e as d}from"./chunk-JKOY2XUY.js";var I=class n{_theme=u("auto");_isDark=u(!1);theme=this._theme.asReadonly();isDark=this._isDark.asReadonly();constructor(){this.setTheme("dark"),p(()=>{this.applyTheme()})}setTheme(i){this._theme.set("dark"),localStorage.setItem("theme","dark"),this.updateDarkMode()}toggleTheme(){}updateDarkMode(){this._isDark.set(!0)}applyTheme(){this._isDark()?(document.documentElement.classList.add("dark-theme"),document.documentElement.setAttribute("data-theme","dark"),document.body.classList.add("dark-mode")):(document.documentElement.classList.remove("dark-theme"),document.documentElement.setAttribute("data-theme","light"),document.body.classList.remove("dark-mode"))}static \u0275fac=function(s){return new(s||n)};static \u0275prov=z({token:n,factory:n.\u0275fac,providedIn:"root"})};function A(n){n||(n=h(g));let i=new c(s=>{if(n.destroyed){s.next();return}return n.onDestroy(s.next.bind(s))});return s=>s.pipe(C(i))}var v=class{source;destroyed=!1;destroyRef=h(g);constructor(i){this.source=i,this.destroyRef.onDestroy(()=>{this.destroyed=!0})}subscribe(i){if(this.destroyed)throw new D(953,!1);let s=this.source.pipe(A(this.destroyRef)).subscribe({next:e=>i(e)});return{unsubscribe:()=>s.unsubscribe()}}};function t(n,i){return new v(n)}function x(n){let i=T(n);return new c(s=>{let e=i?.onDestroy(()=>s.complete()),r=n.subscribe(o=>s.next(o));return()=>{r.unsubscribe(),e?.()}})}var F=new S("NGX_ECHARTS_CONFIG"),b=class{constructor(){this.subject=new l(1),this.subscriptions=new f}doFilter(i){this.subject.next(i)}dispose(){this.subscriptions.unsubscribe()}notEmpty(i,s){this.subscriptions.add(this.subject.subscribe(e=>{if(e[i]){let r=e[i].currentValue;r!=null&&s(r)}}))}has(i,s){this.subscriptions.add(this.subject.subscribe(e=>{if(e[i]){let r=e[i].currentValue;s(r)}}))}notFirst(i,s){this.subscriptions.add(this.subject.subscribe(e=>{if(e[i]&&!e[i].isFirstChange()){let r=e[i].currentValue;s(r)}}))}notFirstAndEmpty(i,s){this.subscriptions.add(this.subject.subscribe(e=>{if(e[i]&&!e[i].isFirstChange()){let r=e[i].currentValue;r!=null&&s(r)}}))}},le=(()=>{let i=class i{constructor(){this.el=h(M),this.ngZone=h(R),this.config=h(F),this.options=a(null),this.theme=a(this.config.theme??null),this.initOpts=a(null),this.merge=a(null),this.autoResize=a(!0),this.loading=a(!1),this.loadingType=a("default"),this.loadingOpts=a(null),this.chartInit=m(),this.optionsError=m(),this.chartClick=t(this.createLazyEvent("click")),this.chartDblClick=t(this.createLazyEvent("dblclick")),this.chartMouseDown=t(this.createLazyEvent("mousedown")),this.chartMouseMove=t(this.createLazyEvent("mousemove")),this.chartMouseUp=t(this.createLazyEvent("mouseup")),this.chartMouseOver=t(this.createLazyEvent("mouseover")),this.chartMouseOut=t(this.createLazyEvent("mouseout")),this.chartGlobalOut=t(this.createLazyEvent("globalout")),this.chartContextMenu=t(this.createLazyEvent("contextmenu")),this.chartHighlight=t(this.createLazyEvent("highlight")),this.chartDownplay=t(this.createLazyEvent("downplay")),this.chartSelectChanged=t(this.createLazyEvent("selectchanged")),this.chartLegendSelectChanged=t(this.createLazyEvent("legendselectchanged")),this.chartLegendSelected=t(this.createLazyEvent("legendselected")),this.chartLegendUnselected=t(this.createLazyEvent("legendunselected")),this.chartLegendLegendSelectAll=t(this.createLazyEvent("legendselectall")),this.chartLegendLegendInverseSelect=t(this.createLazyEvent("legendinverseselect")),this.chartLegendScroll=t(this.createLazyEvent("legendscroll")),this.chartDataZoom=t(this.createLazyEvent("datazoom")),this.chartDataRangeSelected=t(this.createLazyEvent("datarangeselected")),this.chartGraphRoam=t(this.createLazyEvent("graphroam")),this.chartGeoRoam=t(this.createLazyEvent("georoam")),this.chartTreeRoam=t(this.createLazyEvent("treeroam")),this.chartTimelineChanged=t(this.createLazyEvent("timelinechanged")),this.chartTimelinePlayChanged=t(this.createLazyEvent("timelineplaychanged")),this.chartRestore=t(this.createLazyEvent("restore")),this.chartDataViewChanged=t(this.createLazyEvent("dataviewchanged")),this.chartMagicTypeChanged=t(this.createLazyEvent("magictypechanged")),this.chartGeoSelectChanged=t(this.createLazyEvent("geoselectchanged")),this.chartGeoSelected=t(this.createLazyEvent("geoselected")),this.chartGeoUnselected=t(this.createLazyEvent("geounselected")),this.chartAxisAreaSelected=t(this.createLazyEvent("axisareaselected")),this.chartBrush=t(this.createLazyEvent("brush")),this.chartBrushEnd=t(this.createLazyEvent("brushend")),this.chartBrushSelected=t(this.createLazyEvent("brushselected")),this.chartGlobalCursorTaken=t(this.createLazyEvent("globalcursortaken")),this.chartRendered=t(this.createLazyEvent("rendered")),this.chartFinished=t(this.createLazyEvent("finished")),this.animationFrameID=null,this.chart$=new l(1),this.resize$=new y,this.changeFilter=new b,this.resizeObFired=!1,this.echarts=this.config.echarts}ngOnChanges(e){this.changeFilter.doFilter(e)}ngOnInit(){if(!window.ResizeObserver)throw new Error("please install a polyfill for ResizeObserver");this.resizeSub=this.resize$.pipe(E(100,L,{leading:!1,trailing:!0})).subscribe(()=>this.resize()),this.autoResize()&&(this.resizeOb=this.ngZone.runOutsideAngular(()=>new window.ResizeObserver(e=>{for(let r of e)r.target===this.el.nativeElement&&(this.resizeObFired?this.animationFrameID=window.requestAnimationFrame(()=>{this.resize$.next()}):this.resizeObFired=!0)})),this.resizeOb.observe(this.el.nativeElement)),this.changeFilter.notFirstAndEmpty("options",e=>this.onOptionsChange(e)),this.changeFilter.notFirstAndEmpty("merge",e=>this.setOption(e)),this.changeFilter.has("loading",e=>this.toggleLoading(!!e)),this.changeFilter.notFirst("theme",()=>this.refreshChart())}ngOnDestroy(){window.clearTimeout(this.initChartTimer),this.resizeSub&&this.resizeSub.unsubscribe(),this.animationFrameID&&window.cancelAnimationFrame(this.animationFrameID),this.resizeOb&&this.resizeOb.unobserve(this.el.nativeElement),this.loadingSub&&this.loadingSub.unsubscribe(),this.changeFilter.dispose(),this.dispose()}ngAfterViewInit(){this.initChartTimer=window.setTimeout(()=>this.initChart())}dispose(){this.chart&&(this.chart.isDisposed()||this.chart.dispose(),this.chart=null)}resize(){this.chart&&this.chart.resize()}toggleLoading(e){this.chart?e?this.chart.showLoading(this.loadingType(),this.loadingOpts()):this.chart.hideLoading():this.loadingSub=this.chart$.subscribe(r=>e?r.showLoading(this.loadingType(),this.loadingOpts()):r.hideLoading())}setOption(e,r){if(this.chart)try{this.chart.setOption(e,r)}catch(o){console.error(o),this.optionsError.emit(o)}}refreshChart(){return d(this,null,function*(){this.dispose(),yield this.initChart()})}createChart(){let e=this.el.nativeElement;if(window&&window.getComputedStyle){let r=window.getComputedStyle(e,null).getPropertyValue("height");(!r||r==="0px")&&(!e.style.height||e.style.height==="0px")&&(e.style.height="400px")}return this.ngZone.runOutsideAngular(()=>(typeof this.echarts=="function"?this.echarts:()=>Promise.resolve(this.echarts))().then(({init:o})=>o(e,this.theme()??this.config?.theme,this.initOpts())))}initChart(){return d(this,null,function*(){yield this.onOptionsChange(this.options());let e=this.merge();e&&this.chart&&this.setOption(e)})}onOptionsChange(e){return d(this,null,function*(){e&&(this.chart?this.setOption(this.options(),!0):(this.chart=yield this.createChart(),this.chart$.next(this.chart),this.chartInit.emit(this.chart),this.setOption(this.options(),!0)))})}createLazyEvent(e){return x(this.chartInit).pipe(w(r=>new c(o=>(r.on(e,j=>this.ngZone.run(()=>o.next(j))),()=>{this.chart&&(this.chart.isDisposed()||r.off(e))}))))}};i.\u0275fac=function(r){return new(r||i)},i.\u0275dir=k({type:i,selectors:[["echarts"],["","echarts",""]],inputs:{options:[1,"options"],theme:[1,"theme"],initOpts:[1,"initOpts"],merge:[1,"merge"],autoResize:[1,"autoResize"],loading:[1,"loading"],loadingType:[1,"loadingType"],loadingOpts:[1,"loadingOpts"]},outputs:{chartInit:"chartInit",optionsError:"optionsError",chartClick:"chartClick",chartDblClick:"chartDblClick",chartMouseDown:"chartMouseDown",chartMouseMove:"chartMouseMove",chartMouseUp:"chartMouseUp",chartMouseOver:"chartMouseOver",chartMouseOut:"chartMouseOut",chartGlobalOut:"chartGlobalOut",chartContextMenu:"chartContextMenu",chartHighlight:"chartHighlight",chartDownplay:"chartDownplay",chartSelectChanged:"chartSelectChanged",chartLegendSelectChanged:"chartLegendSelectChanged",chartLegendSelected:"chartLegendSelected",chartLegendUnselected:"chartLegendUnselected",chartLegendLegendSelectAll:"chartLegendLegendSelectAll",chartLegendLegendInverseSelect:"chartLegendLegendInverseSelect",chartLegendScroll:"chartLegendScroll",chartDataZoom:"chartDataZoom",chartDataRangeSelected:"chartDataRangeSelected",chartGraphRoam:"chartGraphRoam",chartGeoRoam:"chartGeoRoam",chartTreeRoam:"chartTreeRoam",chartTimelineChanged:"chartTimelineChanged",chartTimelinePlayChanged:"chartTimelinePlayChanged",chartRestore:"chartRestore",chartDataViewChanged:"chartDataViewChanged",chartMagicTypeChanged:"chartMagicTypeChanged",chartGeoSelectChanged:"chartGeoSelectChanged",chartGeoSelected:"chartGeoSelected",chartGeoUnselected:"chartGeoUnselected",chartAxisAreaSelected:"chartAxisAreaSelected",chartBrush:"chartBrush",chartBrushEnd:"chartBrushEnd",chartBrushSelected:"chartBrushSelected",chartGlobalCursorTaken:"chartGlobalCursorTaken",chartRendered:"chartRendered",chartFinished:"chartFinished"},exportAs:["echarts"],features:[O]});let n=i;return n})();function ue(n){return{provide:F,useValue:n}}export{le as a,ue as b,I as c};
